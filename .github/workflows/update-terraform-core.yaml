name: Update Terraform Core

on:
  workflow_dispatch:

jobs:
    update_terraform_core:
        name: Update Terraform Core
        runs-on: [self-hosted, Linux, X64, deploy]
        if: github.actor == 'tal-rofe'
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TF_VAR_frontend_s3_bucket_name: ${{ secrets.FRONTEND_AWS_S3_BUCKET }}
            TF_VAR_docs_s3_bucket_name: ${{ secrets.DOCS_AWS_S3_BUCKET }}
            TF_VAR_backend_repository: dashboard-backend
            TF_VAR_cli_backend_repository: dashboard-cli-backend
            TERRAFORM_ROOT_FOLDER: terraform

        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}
                  working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}
                  
            - name: Terraform setup
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_wrapper: false
                working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Terraform core init
              env:
                  TERRAFORM_BACKEND_S3_BUCKET: ${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}
                  TERRAFORM_BACKEND_DYNAMODB_TABLE: ${{ secrets.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
              run: |
                terraform -chdir="core" init \
                -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" \
                -backend-config="dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE" \
                -backend-config="region=$AWS_REGION"
                terraform -chdir="core" refresh
              working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Terraform core plan
              run: terraform -chdir="core" plan -no-color -out state.tfplan
              working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Terraform core apply
              run: terraform -chdir="core" apply state.tfplan
              working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Get Terraform core outputs
              id: terraform-outputs
              run: |
                frontend_cloudfront_distribution_id=$(terraform -chdir="core" output -raw frontend_cloudfront_distribution_id)
                docs_cloudfront_distribution_id=$(terraform -chdir="core" output -raw docs_cloudfront_distribution_id)
                eks_kubeconfig=$(terraform -chdir="core" output -raw eks_kubeconfig | base64)
                echo "FRONTEND_CLOUDFRONT_DISTRIBUTION_ID=$frontend_cloudfront_distribution_id" >> $GITHUB_OUTPUT
                echo "DOCS_CLOUDFRONT_DISTRIBUTION_ID=$docs_cloudfront_distribution_id" >> $GITHUB_OUTPUT
                echo "KUBE_CONFIG_B64<<EOF" >> $GITHUB_OUTPUT
                echo "$eks_kubeconfig" >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT
              working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Set frontend Cloudfront distribution ID secret
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                name: FRONTEND_AWS_CLOUDFRONT_DISTRIBUTION_ID
                value: ${{ steps.terraform-outputs.outputs.FRONTEND_CLOUDFRONT_DISTRIBUTION_ID }}
                repository: Exlint/dashboard
                token: ${{ secrets.SET_SECRETS_GH_TOKEN }}
                working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Set docs Cloudfront distribution ID secret
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                name: DOCS_AWS_CLOUDFRONT_DISTRIBUTION_ID
                value: ${{ steps.terraform-outputs.outputs.DOCS_CLOUDFRONT_DISTRIBUTION_ID }}
                repository: Exlint/dashboard
                token: ${{ secrets.SET_SECRETS_GH_TOKEN }}
                working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Set k8s kube config secret
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                name: KUBE_CONFIG_DATA
                value: ${{ steps.terraform-outputs.outputs.KUBE_CONFIG_B64 }}
                repository: Exlint/dashboard
                token: ${{ secrets.SET_SECRETS_GH_TOKEN }}
                working-directory: ${{ env.TERRAFORM_ROOT_FOLDER }}

            - name: Slack notification                                
              uses: rtCamp/action-slack-notify@v2             
              env:                                                    
                SLACK_CHANNEL: dashboard-deployment       
                SLACK_MESSAGE: 'Just updated Terraform core'
                SLACK_TITLE: 'Deployment'                         
                SLACK_USERNAME: 'Yazif Deployer'                           
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_DASHBOARD_DEPLOYMENT }}       
                MSG_MINIMAL: true  

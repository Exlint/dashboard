name: Fulfill Terrafrom

on:
  workflow_dispatch:

jobs:
    fulfill_terraform:
        name: Fulfill Terraform 
        runs-on: [self-hosted, Linux, X64, deploy]
        if: github.actor == 'tal-rofe'
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TF_VAR_frontend_s3_bucket_name: ${{ secrets.AWS_S3_BUCKET }}
            TF_VAR_backend_repository: dashboard-backend
            TF_VAR_cli_backend_repository: dashboard-cli-backend
            DATABASE_URL: mongodb+srv://${{ secrets.DATABASE_USERNAME }}:${{ secrets.DATABASE_PASSWORD }}@exlint-dashboard.gzy04y8.mongodb.net/?retryWrites=true&w=majority

        steps:
            - name: Setup Node environment
              uses: Exlint/node-environment@v1.1.0
              with:
                  should-cache: false
                  node-version: 18.13.0
                  package-manager: pnpm
                  package-manager-version: 7.25.0

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}
                  
            - name: Terraform setup
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_wrapper: false

            - name: Terraform core init
              env:
                  TERRAFORM_BACKEND_S3_BUCKET: ${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}
                  TERRAFORM_BACKEND_DYNAMODB_TABLE: ${{ secrets.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
              run: |
                terraform -chdir="./terraform/core" init \
                -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" \
                -backend-config="dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE" \
                -backend-config="region=$AWS_REGION" 

            - name: Terraform core plan
              run: terraform -chdir="./terraform/core" plan -no-color -out state.tfplan

            - name: Terraform core apply
              run: terraform -chdir="./terraform/core" apply state.tfplan

            - name: Get Terraform core outputs
              id: terraform-outputs
              run: |
                distribution_id=$(terraform -chdir="./terraform/core" output -raw cloudfront_distribution_id)
                eks_kubeconfig=$(terraform -chdir="./terraform/core" output -raw eks_kubeconfig | base64)
                echo "DISTRIBUTION_ID=$distribution_id" >> $GITHUB_OUTPUT
                echo "KUBE_CONFIG_B64<<EOF" >> $GITHUB_OUTPUT
                echo "$eks_kubeconfig" >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT

            - name: Set Cloudfront distribution ID secret
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                name: AWS_CLOUDFRONT_DISTRIBUTION_ID
                value: ${{ steps.terraform-outputs.outputs.DISTRIBUTION_ID }}
                repository: Exlint/dashboard
                token: ${{ secrets.SET_SECRETS_GH_TOKEN }}

            - name: Set k8s kube config secret
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                name: KUBE_CONFIG_DATA
                value: ${{ steps.terraform-outputs.outputs.KUBE_CONFIG_B64 }}
                repository: Exlint/dashboard
                token: ${{ secrets.SET_SECRETS_GH_TOKEN }}

            - name: Build frontend
              run: pnpm exec nx build @exlint-dashboard/frontend

            - name: Deploy to S3 and invalidate Cloudfront
              uses: reggionick/s3-deploy@v3
              with:
                  folder: ./apps/frontend/dist
                  bucket: ${{ secrets.AWS_S3_BUCKET }}
                  bucket-region: ${{ secrets.AWS_REGION }}
                  dist-id: ${{ steps.terraform-outputs.outputs.DISTRIBUTION_ID }}
                  invalidation: /
                  delete-removed: true
                  private: true
                  filesToInclude: '**/*'

            - name: Slack notification                                
              uses: rtCamp/action-slack-notify@v2             
              env:                                                    
                SLACK_CHANNEL: dashboard-deployment       
                SLACK_MESSAGE: 'Just fulfilled Terraform'
                SLACK_TITLE: 'Deployment'                         
                SLACK_USERNAME: 'Yazif Deployer'                           
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_DASHBOARD_DEPLOYMENT }}       
                MSG_MINIMAL: true  

name: Integration

on:
    pull_request:
        branches: [main]

env:
    NODE_VERSION: 18
    PNPM_VERSION: 7.14.0

jobs:
    call_pnpm_caching_workflow:
        uses: ./.github/workflows/pnpm-caching.yaml
        with:
            runner: ubuntu-latest
            node-version: 18
            pnpm-version: 7.14.0

    test_depcheck:
        needs: call_pnpm_caching_workflow
        name: Testing Depcheck
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test Depcheck
              run: pnpm depcheck && pnpm -r --parallel depcheck

    test_inflint:
        needs: call_pnpm_caching_workflow
        name: Testing Inflint
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test Inflint
              run: pnpm inflint

    test_typescript:
        needs: call_pnpm_caching_workflow
        name: Testing TypeScript
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test TypeScript
              run: pnpm type-check && pnpm -r --parallel type-check

    test_prettier:
        needs: call_pnpm_caching_workflow
        name: Testing Prettier
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test Prettier
              run: pnpm prettier

    test_eslint:
        needs: call_pnpm_caching_workflow
        name: Testing ESLint
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test ESLint
              run: pnpm lint && pnpm -r --parallel lint

    test_stylelint:
        needs: call_pnpm_caching_workflow
        name: Testing Stylelint
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test Stylelint
              run: pnpm --filter frontend stylelint

    test_prisma:
        needs: call_pnpm_caching_workflow
        name: Testing Prisma
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test Prisma
              run: pnpm prisma-format

    test_build:
        needs: call_pnpm_caching_workflow
        name: Testing build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: ['$NODE_VERSION']
                pnpm-version: ['$PNPM_VERSION']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: ${{ matrix.pnpm-version }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Installing dependencies
              run: pnpm i --frozen-lockfile

            - name: Test build
              run: pnpm -r --parallel build

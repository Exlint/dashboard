name: Deploy docs application

on:
  repository_dispatch:
    types: [docs-production]

jobs:
    deploy:
        name: Deploy docs to AWS
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                submodules: true

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18.18.2

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7.26.3

            - name: Remove root pnpm files
              run: rm ./pnpm-lock.yaml ./package.json ./pnpm-workspace.yaml
              shell: bash
              
            - name: Installing dependencies
              working-directory: apps/docs
              run: pnpm i --frozen-lockfile --prefer-offline
              shell: bash

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Build docs
              working-directory: apps/docs
              run: pnpm build

            - name: Deploy to S3 and invalidate Cloudfront
              uses: reggionick/s3-deploy@v4
              with:
                  folder: ./apps/docs/build
                  bucket: ${{ secrets.DOCS_AWS_S3_BUCKET }}
                  bucket-region: ${{ secrets.AWS_REGION }}
                  dist-id: ${{ secrets.DOCS_AWS_CLOUDFRONT_DISTRIBUTION_ID }}
                  invalidation: /
                  delete-removed: true
                  private: true
                  filesToInclude: '**/*'

            - name: Slack notification                                
              uses: rtCamp/action-slack-notify@v2             
              env:                                                    
                SLACK_CHANNEL: dashboard-deployment       
                SLACK_MESSAGE: 'Just deployed docs'
                SLACK_TITLE: 'Deployment'                         
                SLACK_USERNAME: 'Yazif Deployer'                           
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_DASHBOARD_DEPLOYMENT }}       
                MSG_MINIMAL: true  

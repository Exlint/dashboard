name: Destroy Terrafrom

on:
  workflow_dispatch:

jobs:
    destroy_terraform:
        name: Destroy Terraform 
        runs-on: [self-hosted, Linux, X64, deploy]
        if: github.actor == 'tal-rofe'
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TF_VAR_frontend_s3_bucket_name: ${{ secrets.AWS_S3_BUCKET }}
            TF_VAR_backend_repository: dashboard-backend
            TF_VAR_cli_backend_repository: dashboard-cli-backend
            TF_VAR_database_url: mongodb+srv://${{ secrets.DATABASE_USERNAME }}:${{ secrets.DATABASE_PASSWORD }}@dashboard.elge3qb.mongodb.net/dashboard?retryWrites=true&w=majority
            TF_VAR_access_token_jwt_key: ${{ secrets.ACCESS_TOKEN_JWT_KEY }}
            TF_VAR_refresh_token_jwt_key: ${{ secrets.REFRESH_TOKEN_JWT_KEY }}
            TF_VAR_google_oauth_client_id: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
            TF_VAR_google_oauth_client_secret: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
            TF_VAR_google_oauth_redirect_uri: "https://api.exlint.io/user/auth/google-redirect"
            TF_VAR_gh_oauth_client_id: ${{ secrets.GH_OAUTH_CLIENT_ID }}
            TF_VAR_gh_oauth_client_secret: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
            TF_VAR_gh_oauth_redirect_uri: "https://api.exlint.io/user/auth/github-redirect"
            TF_VAR_mixpanel_token: ${{ secrets.MIXPANEL_TOKEN }}
            TF_VAR_frontend_url: "https://app.exlint.io"
            TF_VAR_cli_token_jwt_key: ${{ secrets.CLI_TOKEN_JWT_KEY }}

        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Get package.json version
              id: package-version
              uses: martinbeentjes/npm-get-version-action@master

            - name: Terraform setup
              uses: hashicorp/setup-terraform@v2

            - name: Terraform k8s init
              env:
                  TERRAFORM_BACKEND_S3_BUCKET: ${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}
                  TERRAFORM_BACKEND_DYNAMODB_TABLE: ${{ secrets.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
              run: |
                terraform -chdir="./terraform/k8s" init \
                -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" \
                -backend-config="dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE" \
                -backend-config="region=$AWS_REGION" 

            - name: Terraform k8s destroy
              env:
                TF_VAR_api_image_tag: ${{ steps.package-version.outputs.current-version }}
              run: terraform -chdir="./terraform/k8s" destroy -auto-approve

            - name: Terraform core init
              env:
                  TERRAFORM_BACKEND_S3_BUCKET: ${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}
                  TERRAFORM_BACKEND_DYNAMODB_TABLE: ${{ secrets.TERRAFORM_BACKEND_DYNAMODB_TABLE }}
              run: |
                terraform -chdir="./terraform/core" init \
                -backend-config="bucket=$TERRAFORM_BACKEND_S3_BUCKET" \
                -backend-config="dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE" \
                -backend-config="region=$AWS_REGION" 

            - name: Terraform core destroy
              run: terraform -chdir="./terraform/core" destroy -auto-approve

name: Deploy to backend service AWS EKS

on:
    push:
        branches:
            - PRODUCTION

jobs:
    deploy:
        name: Deploy backend service to AWS
        runs-on: [self-hosted, Linux, X64, deploy]
        env:
            BACKEND_ECR_REPOSITORY: dashboard-backend
            DEPLOYMENT_NAME: dashboard-backend-deployment
            BACKEND_CONTAINER_NAME: backend

        steps:
            - name: Cancel previous runs
              uses: styfle/cancel-workflow-action@0.11.0
              with:
                  access_token: ${{ github.token }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1-node16-node16
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Get package.json version
              id: package-version
              uses: martinbeentjes/npm-get-version-action@master

            - name: Build, tag, and push image of backend to Amazon ECR
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                IMAGE_TAG: ${{ steps.package-version.outputs.current-version }}
              run: |
                docker build -t $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG -f ./docker/Dockerfile.backend-prod .
                docker push $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG

            - name: Deploy to EKS cluster
              uses: kodermax/kubectl-aws-eks@master
              env:
                KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                IMAGE_TAG: ${{ steps.package-version.outputs.current-version }}
                CONTAINER_NAME: ${{ env.BACKEND_CONTAINER_NAME }}
              with:
                args: set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG
                
            - name: Verify Deployment
              uses: kodermax/kubectl-aws-eks@master
              env:
                KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
              with:
                args: rollout status deployment/$DEPLOYMENT_NAME

            - name: Slack Notification
              uses: rtCamp/action-slack-notify@v2             
              env:                                                    
                SLACK_CHANNEL: dashboard-deployment                   
                SLACK_MESSAGE: 'Just deployed backend'
                SLACK_TITLE: 'Deployment'                         
                SLACK_USERNAME: 'Yazif Deployer'                           
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_DASHBOARD_DEPLOYMENT }}
                MSG_MINIMAL: true